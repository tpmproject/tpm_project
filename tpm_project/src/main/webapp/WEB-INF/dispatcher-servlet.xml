<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
		
<!-- <beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"> -->
		
<!-- <beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd"> -->

<!-- <beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"> -->
	
	
	<!-- view -->
	<!-- 스프링에서 기본적으로 제공해주는 클래스 -->
	<!-- 어떤 곳으로 보낼지 안내해주는 클래스 ? -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/"></property>
		<property name="suffix" value=".jsp"></property>
		<property name="order" value="2"></property>
	</bean>
	
	<!-- configs -->
	<!-- 컨트롤러 오토 스캔 -->
	<!-- yong으로 시작하는 패키지 스캔 -->
	<context:component-scan base-package="tpm" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/> <!-- @Controller 로 사용하던 클래스 -->
	</context:component-scan>
	<!-- 오토와이어 -->
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
	
	<!-- FileUpload -->
	<!-- 반드시  multipartResolver 이름으로 만들어야 한다. -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"/>	
		
		<property name="maxUploadSize">
			<value>104857600</value> <!-- 100MB -->
		</property>
	</bean>
	
	<!-- DownloadView -->
	<bean id="tpmDown" class="tpm.view.DownloadView"/>
	<!-- 뷰에 대한 이름을 정해줬을때 jsp 가 아니라  -->
	<!-- 우선 순위를 지정하여 우선  viewResolver 검색하고 해당 jsp가 없으면 BeanNameViewResolver 검사 -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="0"/>
	</bean>
	
	<!-- Mybatis -->
	<!-- 1. DataSource-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> <!-- BasicDataSource 는 정보 클래스 -->
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/> <!-- 드라이버 경로 -->
		<property name="url" value="jdbc:oracle:thin:@yongstudy.iptime.org:9000:orcl"/> <!-- url -->
		<property name="username" value="project01_02"/>
		<property name="password" value="project01_02"/>
	</bean>
	<!-- 2. 트랜잭션 관리자 등록 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/> <!-- 어떤 데이터 소스를 관리할지 설정 -->
	</bean>
	<!-- 3. 마이바티스 설정 --> <!-- 사용할 SQL 객체를 미리 만들어놨다가 사용시 빌려주는 개념 -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:/mybatis-config.xml"/> <!-- classpath는 src 부터를 의미한다. -->
	</bean>
	<!-- 리모컨 생성 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"> <!-- 액박이 뜨는 이유 : 기본 생성자가 없는 클래스 -->
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"/>
	</bean>
	
	
	<!-- DAOs -->
	<bean id="categoryDAO" class="tpm.category.model.CategoryDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"></ref>
		</constructor-arg>
	</bean>
	
	<bean id="channelDAO" class="tpm.channel.model.ChannelDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"></ref>
		</constructor-arg>
	</bean>
	
	<bean id="channelMemberDAO" class="tpm.channelmember.model.ChannelMemberDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"></ref>
		</constructor-arg>
	</bean>
	
	<bean id="chatDAO" class="tpm.chat.model.ChatDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"></ref>
		</constructor-arg>
	</bean>
	
	<bean id="checklistDAO" class="tpm.checklist.model.ChecklistDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"></ref>
		</constructor-arg>
	</bean>
	
	<bean id="commentDAO" class="tpm.comment.model.CommentDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"></ref>
		</constructor-arg>
	</bean>
	
	<bean id="fileDAO" class="tpm.file.model.FileDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"></ref>
		</constructor-arg>
	</bean>
	
	<bean id="memberDAO" class="tpm.member.model.MemberDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"></ref>
		</constructor-arg>
	</bean>
	
	<bean id="myFriendDAO" class="tpm.myfriend.model.MyFriendDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"></ref>
		</constructor-arg>
	</bean>
	
	<bean id="noticeDAO" class="tpm.notice.model.NoticeDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"></ref>
		</constructor-arg>
	</bean>
	
	<bean id="projectDAO" class="tpm.project.model.ProjectDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"/>
		</constructor-arg>
	</bean>
	
	<bean id="tendencyDAO" class="tpm.tendency.model.TendencyDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"/>
		</constructor-arg>
	</bean>
	
	<bean id="workDAO" class="tpm.work.model.WorkDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"/>
		</constructor-arg>
	</bean>
	
	<bean id="sampleWorkDAO" class="tpm.sample.model.SampleWorkDAO">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"/>
		</constructor-arg>
	</bean>
	
	<bean id="studyDAO" class="tpm.study.model.StudyDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"/>
		</constructor-arg>
	</bean>
	
	<bean id="pathDAO" class="tpm.member.model.Path"/>
	
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
	<!-- <property name="contentType" value="application/json;charset=UTF-8"/> -->
	<property name="contentType" value="text/html;charset=UTF-8"/>
	</bean>
	
	<!-- AjaxFileUpload -->
	<bean id="FileService" class="tpm.sample.model.AjaxFileUploadService"/>

	<bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1"></property>
	</bean>

	<!-- <bean name="JSON" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" /> -->
	
	
	
	<mvc:annotation-driven />

	
</beans>
